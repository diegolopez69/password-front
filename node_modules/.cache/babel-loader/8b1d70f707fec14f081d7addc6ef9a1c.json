{"remainingRequest":"/home/caillou/Desktop/password-front/node_modules/babel-loader/lib/index.js!/home/caillou/Desktop/password-front/node_modules/vuetify/lib/util/mixins.js","dependencies":[{"path":"/home/caillou/Desktop/password-front/node_modules/vuetify/lib/util/mixins.js","mtime":499162500000},{"path":"/home/caillou/Desktop/password-front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/caillou/Desktop/password-front/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:InVzZSBzdHJpY3QiOwoKdmFyIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQgPSByZXF1aXJlKCIvaG9tZS9jYWlsbG91L0Rlc2t0b3AvcGFzc3dvcmQtZnJvbnQvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvaW50ZXJvcFJlcXVpcmVEZWZhdWx0Iik7CgpPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgIl9fZXNNb2R1bGUiLCB7CiAgdmFsdWU6IHRydWUKfSk7CmV4cG9ydHMuZGVmYXVsdCA9IG1peGluczsKCnZhciBfdnVlID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKCJ2dWUiKSk7CgovKiBlc2xpbnQtZGlzYWJsZSBtYXgtbGVuLCBpbXBvcnQvZXhwb3J0LCBuby11c2UtYmVmb3JlLWRlZmluZSAqLwpmdW5jdGlvbiBtaXhpbnMoLi4uYXJncykgewogIHJldHVybiBfdnVlLmRlZmF1bHQuZXh0ZW5kKHsKICAgIG1peGluczogYXJncwogIH0pOwp9"},{"version":3,"sources":["../../src/util/mixins.ts"],"names":[],"mappings":";;;;;;;;;AACA;;AADA;AAKc,SAAA,MAAA,CAAkB,GAAlB,IAAA,EAA2C;AACvD,SAAO,aAAA,MAAA,CAAW;AAAE,IAAA,MAAM,EAAE;AAAV,GAAX,CAAP;AACD","sourcesContent":["/* eslint-disable max-len, import/export, no-use-before-define */\nimport Vue, { VueConstructor } from 'vue'\n\nexport default function mixins<T extends VueConstructor[]> (...args: T): ExtractVue<T> extends infer V ? V extends Vue ? VueConstructor<V> : never : never\nexport default function mixins<T extends Vue> (...args: VueConstructor[]): VueConstructor<T>\nexport default function mixins (...args: VueConstructor[]): VueConstructor {\n  return Vue.extend({ mixins: args })\n}\n\n/**\n * Returns the instance type from a VueConstructor\n * Useful for adding types when using mixins().extend()\n */\nexport type ExtractVue<T extends VueConstructor | VueConstructor[]> = T extends (infer U)[]\n  ? UnionToIntersection<\n    U extends VueConstructor<infer V> ? V : never\n  >\n  : T extends VueConstructor<infer V> ? V : never\n\ntype UnionToIntersection<U> =\n  (U extends any ? (k: U) => void : never) extends ((k: infer I) => void) ? I : never\n"],"sourceRoot":""}]}